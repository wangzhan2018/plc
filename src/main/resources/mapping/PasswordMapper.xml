<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="cn.lylg.dao.PasswordMapper" >
  <resultMap id="BaseResultMap" type="cn.lylg.model.Password" >
    <id column="pid" property="pid" jdbcType="INTEGER" />
    <result column="cid" property="cid" jdbcType="INTEGER" />
    <result column="ppassword" property="ppassword" jdbcType="VARCHAR" />
    <result column="psdate" property="psdate" jdbcType="DATE" />
    <result column="pgroup" property="pgroup" jdbcType="INTEGER" />
    <result column="ptimes" property="ptimes" jdbcType="INTEGER" />
    <result column="ptype" property="ptype" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <association  column="cid"  property="customerCid" select="cn.lylg.dao.CustomerMapper.selectByPrimaryKey" />
  </resultMap>
  
   <resultMap id="BaseResultMap2" type="cn.lylg.model.Password" >
    <id column="pid" property="pid" jdbcType="INTEGER" />
    <result column="cid" property="cid" jdbcType="INTEGER" />
    <result column="ppassword" property="ppassword" jdbcType="VARCHAR" />
    <result column="psdate" property="psdate" jdbcType="DATE" />
    <result column="pgroup" property="pgroup" jdbcType="INTEGER" />
    <result column="ptimes" property="ptimes" jdbcType="INTEGER" />
    <result column="ptype" property="ptype" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <association property="customerCid" column="c.cid" select="cn.lylg.dao.CustomerMapper.selectByPrimaryKey" />
  </resultMap>
  <select id="selectByCid" resultMap="BaseResultMap" >
    select <include refid="Base_Column_List" /> from `password` where cid =#{cid}
  </select>
  <sql id="Base_Column_List" >
    pid, cid, ppassword, psdate,pgroup, ptimes, ptype,state
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from `password`
    where pid = #{pid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from `password`
    where pid = #{pid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.lylg.model.Password" >
    insert into `password` (pid, cid, ppassword, 
      psdate, pgroup,ptimes, ptype,state)
    values (#{pid,jdbcType=INTEGER}, #{cid,jdbcType=INTEGER}, #{ppassword,jdbcType=VARCHAR}, 
      #{psdate,jdbcType=DATE},  #{pgroup,jdbcType=VARCHAR},#{ptimes,jdbcType=INTEGER}, #{ptype,jdbcType=VARCHAR},#{state,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.lylg.model.Password" >
    insert into `password`
    <trim prefix="(" suffix=")" suffixOverrides="," >
      pid,
      cid,
      ppassword,
      psdate,
      pgroup,
      ptimes,
      ptype,
      state,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{pid,jdbcType=INTEGER},
      #{cid,jdbcType=INTEGER},
      #{ppassword,jdbcType=VARCHAR},
      #{psdate,jdbcType=DATE},
       #{pgroup,jdbcType=VARCHAR},
      #{ptimes,jdbcType=INTEGER},
      #{ptype,jdbcType=VARCHAR},
      #{state,jdbcType=VARCHAR},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.lylg.model.Password" >
    update `password`
    <set >
      <if test="cid != null" >
        cid = #{cid,jdbcType=INTEGER},
      </if>
      <if test="ppassword != null" >
        ppassword = #{ppassword,jdbcType=VARCHAR},
      </if>
      <if test="psdate != null" >
        psdate = #{psdate,jdbcType=DATE},
      </if>
      <if test="pgroup != null" >
        pgroup = #{pgroup,jdbcType=VARCHAR},
      </if>
      <if test="ptimes != null" >
        ptimes = #{ptimes,jdbcType=INTEGER},
      </if>
      <if test="ptype != null" >
        ptype = #{ptype,jdbcType=VARCHAR},
      </if>
    </set>
    where pid = #{pid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.lylg.model.Password" >
    update `password`
    set cid = #{cid,jdbcType=INTEGER},
      ppassword = #{ppassword,jdbcType=VARCHAR},
      psdate = #{psdate,jdbcType=DATE},
        pgroup = #{pgroup,jdbcType=VARCHAR},
      ptimes = #{ptimes,jdbcType=INTEGER},
      ptype = #{ptype,jdbcType=VARCHAR}
    where pid = #{pid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeya" parameterType="java.lang.Integer" >
    update `password`
    set state="使用"
    where pid = #{pid,jdbcType=INTEGER}
  </update>
  
  <!-- <select id="selectFenye" parameterType="int" resultMap="getPasswordMap">
        SELECT * FROM password p,customer c WHERE c.cid=p.cid
    </select>
    <resultMap type="cn.lylg.model.Password"" id="getPasswordMap">
        <id property="id" column="c_id"/>
        <result property="name" column="c_name"/>
        <association property="customerCid" javaType="cn.lylg.model.Customer">
            <id property="id" column="t_id"/>
            <result property="name" column="t_name"/>
        </association>
    </resultMap> -->
    
    
    <!--查询所有的数据  -->
  <select id="selectFenye" resultMap="BaseResultMap" parameterType="cn.lylg.model.Fenye" >
    select 
   <include refid="Base_Column_List" />
    from password   
     order by cid,pgroup limit  #{page,jdbcType=INTEGER} , #{rows,jdbcType=INTEGER} 
  </select>
  
  <!--查询所有的数据总数  -->
  <select id="selectCount"  resultType="java.lang.Integer" >
    select 
    count(*) 
    from password   
  </select>
  
  <!--查询最大次数  -->
  <select id="selectMax"    resultType="java.lang.Integer"  parameterType="cn.lylg.model.Password" >
    select 
     max(ptimes) as max
    from password  where cid= #{cid,jdbcType=INTEGER} and  ptype =  #{ptype,jdbcType=VARCHAR}
  </select>
  
  <!--查询所有的数据  -->
  <select id="selectFenyeByname" resultMap="BaseResultMap" parameterType="cn.lylg.model.Fenye" >
    select 
  pid, c.cid, ppassword, psdate,pgroup, ptimes, ptype
    from password p,customer c  where p.cid=c.cid  and  c.cname like '%${name}%'
     order by cid,pgroup limit  #{page,jdbcType=INTEGER} , #{rows,jdbcType=INTEGER} 
  </select></mapper>